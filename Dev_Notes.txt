1.) I've been exposed to several different patterns of keeping state.

One thing which I've been surprised about is how none of the major GraphQl Apollo examples use Redux.

They are keeping state many times on the server using Subscriptions (Githunt) and local state (Handsup)

In the Githunt case, state is being kept on the Modal only (Votes)
In the Handsup case state is being kept locally, with a mutation on the server (Votes)

2.) Rendering Logic (ie. isLoading)

Watch for how this accomplished in both

3.) Passing Props Down Generally

Watch for which props are being passed down to components

4.) To accomplish the "local WRITE", you must rely on upon a conditional if the user is logged in.
  Dispatch to the immediately to store if the user is !logged, dispatch to store after writing if the user is logged in.
  This will need to be solved in the event handlers.


** Auth branch Summary **

1.) Followed Graphcool Auth Tutorial 3.3 (Note:) - 3.4
2.) Added Routes in src/index.js
3.) Re-factored <Goal> and <Steps> components into a src/Routes/UserFeed component representing 1 of 2 planned Routes
4.) Render <UserFeed> in <App>


5. Why doesn't the Goal Input load when logged out?

6. Consider Using componentWillUpdate or componentDidUpdate to act on changes of GraphQl operations (from https://daveceddia.com/react-gotchas/
and https://engineering.musefind.com/react-lifecycle-methods-how-and-when-to-use-them-2111a1b692b1)

7. SelectGoal.js:28 Should NOT dispatch action with value of the form, rather the returned value of the async fetch

8. CurrentGoal.js:90 Repeat GraphCool Example pattern of passing in 'variables' with the spread operator ...variables

9. Carry over from comments CurrentGoal.js
Nit-pick issue: Current behavior is the entire 'Current Goal' text re-renders when a goal
is selected.  Before, only the selected goal rendered.  How to keep the latter...?
  Verify if this is still the case

10. Figure out why inputted mutation varible name have to match.  And more importantly why, the mutation succeeded when
  I gave $goalDocId "id"?"

11. Adding LoggedIn to the state. Usefull for conditionally rendering and initiating Gql operations

12. In <App>, Commneted out <UserFeed> for renderLoggedOut. This will be changed when we shift to allowing users to create Goals and Steps in memory and submit them upon registration.

13. For <CurrentUser> could have added userName to UserQuery payload in <App> and passed down the userName as props to <CurrentUser>

14. Comment from <InputGoal />:39 "//you can probably dispatch setGoal with the returned value of the mutation (which
// should include an id and the goal"

15. This setState warning might be able to be resolved with Container Components. Maybe ask somebody at a co-working space or Meetup.

16. To fix <SuggestStep /> rendering issue in <CurrentSteps/> you could render a small component for the just the input, and then try to render the smart component by passing in the value once the input component has focus.

17. The CurrentSteps Component Will Probably be the most important component where everything happens.
You must try not to make it bloated.

18. In the model that you're pursuing, you can make each suggested step a component...
